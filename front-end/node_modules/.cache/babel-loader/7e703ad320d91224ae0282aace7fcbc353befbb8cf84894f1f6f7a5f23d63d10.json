{"ast":null,"code":"import _regeneratorRuntime from\"/Users/elijah/Desktop/Dev/twitter-showcase-application-main/front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/elijah/Desktop/Dev/twitter-showcase-application-main/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/elijah/Desktop/Dev/twitter-showcase-application-main/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import\"./Showcase.css\";import axios from\"axios\";import likes from\"../Images/love.png\";import retweets from\"../Images/repost.png\";import search from\"../Images/search.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Showcase=function Showcase(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchInput=_useState2[0],setSearchInput=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),userHasSearched=_useState4[0],setUserHasSearched=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tweetData=_useState6[0],setTweetData=_useState6[1];var handleSubmit=function handleSubmit(e){e.preventDefault();getTweets();};var getTweets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"/SearchTweets\",{params:{userInput:searchInput}}).then(function(tweets){setTweetData(tweets.data.statuses);setUserHasSearched(true);});case 3:response=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function getTweets(){return _ref.apply(this,arguments);};}();var renderExtendedEntities=function renderExtendedEntities(tweet){if(tweet.hasOwnProperty(\"extended_entities\")){return/*#__PURE__*/_jsx(\"div\",{className:\"extended-media-container\",children:/*#__PURE__*/_jsx(\"img\",{src:tweet.extended_entities.media[0].media_url,alt:\"media\",className:\"tweet-extended-media\"})});}return/*#__PURE__*/_jsx(_Fragment,{});};var display_tweets=function display_tweets(){var tweet_list=tweetData.map(function(tweet,key){return/*#__PURE__*/_jsxs(\"div\",{className:\"tweet\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:tweet.user.profile_image_url_https,alt:tweet.profile_image_url_https,className:\"tweet-profile-pic\"})}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"tweet-author\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tweet-username\",children:tweet.user.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"tweet-handle\",children:[\"@\",tweet.user.screen_name]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tweet-body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tweet-text\",children:tweet.full_text})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tweet-metrics\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"tweet-retweet-count\",children:[/*#__PURE__*/_jsx(\"img\",{src:retweets,className:\"tweet-retweets\",alt:\"retweets\"}),tweet.retweet_count]}),/*#__PURE__*/_jsxs(\"span\",{className:\"tweet-favorite-count\",children:[/*#__PURE__*/_jsx(\"img\",{src:likes,className:\"tweet-likes\",alt:\"likes\"}),tweet.favorite_count]})]}),renderExtendedEntities(tweet)]})]},key);});if(tweet_list.length>0&&userHasSearched){return tweet_list;}if(tweet_list.length===0&&userHasSearched){return/*#__PURE__*/_jsx(\"h3\",{children:\"Error, there were no matches for your search. Please refine it and try again.\"});}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Search for a Twitter user or a text string\"}),/*#__PURE__*/_jsx(\"img\",{src:search,alt:\"search\",className:\"search-image\"})]});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"showcase-container\",children:[/*#__PURE__*/_jsxs(Form,{className:\"search-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"search-input\",type:\"text\",onChange:function onChange(e){return setSearchInput(e.target.value);},value:searchInput,placeholder:\"Ex: @nasa for NASA's tweets, or NASA to match tweets containing the string 'NASA' \",required:true}),/*#__PURE__*/_jsx(Button,{className:\"search-button\",type:\"submit\",children:\"Search User\"})]}),/*#__PURE__*/_jsx(\"div\",{children:display_tweets()})]});};export default Showcase;","map":{"version":3,"names":["useState","Button","Form","axios","likes","retweets","search","Showcase","searchInput","setSearchInput","userHasSearched","setUserHasSearched","tweetData","setTweetData","handleSubmit","e","preventDefault","getTweets","get","params","userInput","then","tweets","data","statuses","response","console","log","renderExtendedEntities","tweet","hasOwnProperty","extended_entities","media","media_url","display_tweets","tweet_list","map","key","user","profile_image_url_https","name","screen_name","full_text","retweet_count","favorite_count","length","target","value"],"sources":["/Users/elijah/Desktop/Dev/twitter-showcase-application-main/front-end/src/components/Showcase/Showcase.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./Showcase.css\";\nimport axios from \"axios\";\nimport likes from \"../Images/love.png\";\nimport retweets from \"../Images/repost.png\";\nimport search from \"../Images/search.jpg\";\nconst Showcase = () => {\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [userHasSearched, setUserHasSearched] = useState(false);\n    const [tweetData, setTweetData] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        getTweets();\n    };\n\n    const getTweets = async () => {\n        try {\n            const response = await axios\n                .get(\"/SearchTweets\", { params: { userInput: searchInput } })\n                .then((tweets) => {\n                    setTweetData(tweets.data.statuses);\n                    setUserHasSearched(true);\n                });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const renderExtendedEntities = (tweet) => {\n        if (tweet.hasOwnProperty(\"extended_entities\")) {\n            return (\n                <div className=\"extended-media-container\">\n                    <img\n                        src={tweet.extended_entities.media[0].media_url}\n                        alt=\"media\"\n                        className=\"tweet-extended-media\"\n                    />\n                </div>\n            );\n        }\n        return <></>;\n    };\n\n    const display_tweets = () => {\n        const tweet_list = tweetData.map((tweet, key) => {\n            return (\n                <div className=\"tweet\" key={key}>\n                    <span className=\"image-container\">\n                        <img\n                            src={tweet.user.profile_image_url_https}\n                            alt={tweet.profile_image_url_https}\n                            className=\"tweet-profile-pic\"\n                        />\n                    </span>\n                    <span>\n                        <span className=\"tweet-author\">\n                            <span className=\"tweet-username\">\n                                {tweet.user.name}\n                            </span>\n                            <span className=\"tweet-handle\">\n                                @{tweet.user.screen_name}\n                            </span>\n                        </span>\n                        <div className=\"tweet-body\">\n                            <div className=\"tweet-text\">{tweet.full_text}</div>\n                        </div>\n                        <div className=\"tweet-metrics\">\n                            <span className=\"tweet-retweet-count\">\n                                <img\n                                    src={retweets}\n                                    className=\"tweet-retweets\"\n                                    alt=\"retweets\"\n                                />\n                                {tweet.retweet_count}\n                            </span>\n                            <span className=\"tweet-favorite-count\">\n                                <img\n                                    src={likes}\n                                    className=\"tweet-likes\"\n                                    alt=\"likes\"\n                                />\n                                {tweet.favorite_count}\n                            </span>\n                        </div>\n                        {renderExtendedEntities(tweet)}\n                    </span>\n                </div>\n            );\n        });\n        if (tweet_list.length > 0 && userHasSearched) {\n            return tweet_list;\n        }\n        if (tweet_list.length === 0 && userHasSearched) {\n            return (\n                <h3>\n                    Error, there were no matches for your search. Please refine\n                    it and try again.\n                </h3>\n            );\n        } else {\n            return (\n                <>\n                    <h3>Search for a Twitter user or a text string</h3>\n                    <img\n                        src={search}\n                        alt=\"search\"\n                        className=\"search-image\"\n                    ></img>\n                </>\n            );\n        }\n    };\n    return (\n        <div className=\"showcase-container\">\n            <Form className=\"search-form\" onSubmit={handleSubmit}>\n                <input\n                    className=\"search-input\"\n                    type=\"text\"\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    value={searchInput}\n                    placeholder=\"Ex: @nasa for NASA's tweets, or NASA to match tweets containing the string 'NASA' \"\n                    required\n                />\n                <Button className=\"search-button\" type=\"submit\">\n                    Search User\n                </Button>\n            </Form>\n            <div>{display_tweets()}</div>\n        </div>\n    );\n};\n\nexport default Showcase;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}