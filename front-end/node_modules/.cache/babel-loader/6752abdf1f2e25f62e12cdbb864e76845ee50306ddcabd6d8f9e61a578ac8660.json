{"ast":null,"code":"var _jsxFileName = \"/Users/elijah/Desktop/SDMM/twitter-showcase-application/front-end/src/components/Showcase/Showcase.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./Showcase.css\";\nimport axios from \"axios\";\nimport likes from \"../Images/love.png\";\nimport retweets from \"../Images/repost.png\";\nimport search from \"../Images/search.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [userHasSearched, setUserHasSearched] = useState(false);\n  const [tweetData, setTweetData] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    getTweets();\n  };\n  const getTweets = async () => {\n    try {\n      const response = await axios.get(\"/SearchTweets\", {\n        params: {\n          userInput: searchInput\n        }\n      }).then(tweets => {\n        setTweetData(tweets.data.statuses);\n        setUserHasSearched(true);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const renderExtendedEntities = tweet => {\n    if (tweet.hasOwnProperty(\"extended_entities\")) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extended-media-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tweet.extended_entities.media[0].media_url,\n          alt: \"media\",\n          className: \"tweet-extended-media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n  const display_tweets = () => {\n    const tweet_list = tweetData.map((tweet, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tweet.user.profile_image_url_https,\n            alt: tweet.profile_image_url_https,\n            className: \"tweet-profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tweet-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet-username\",\n              children: tweet.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet-handle\",\n              children: [\"@\", tweet.user.screen_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweet-text\",\n              children: tweet.full_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-metrics\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet-retweet-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: retweets,\n                className: \"tweet-retweets\",\n                alt: \"retweets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), tweet.retweet_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet-favorite-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: likes,\n                className: \"tweet-likes\",\n                alt: \"likes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), tweet.favorite_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), renderExtendedEntities(tweet)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    });\n    if (tweet_list.length > 0 && userHasSearched) {\n      return tweet_list;\n    }\n    if (tweet_list.length === 0 && userHasSearched) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error, there were no matches for your search. Please refine it and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Search for a Twitter user or a text string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: search,\n          alt: \"search\",\n          className: \"search-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"showcase-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"search-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        type: \"text\",\n        onChange: e => setSearchInput(e.target.value),\n        value: searchInput,\n        placeholder: \"Ex: @nasa for NASA's tweets, or NASA to match tweets containing the string 'NASA' \",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"search-button\",\n        type: \"submit\",\n        children: \"Search User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display_tweets()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"jmQTuBrTxPPttrrvFHcp3Y9baoQ=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["useState","Button","Form","axios","likes","retweets","search","Showcase","searchInput","setSearchInput","userHasSearched","setUserHasSearched","tweetData","setTweetData","handleSubmit","e","preventDefault","getTweets","response","get","params","userInput","then","tweets","data","statuses","err","console","log","renderExtendedEntities","tweet","hasOwnProperty","extended_entities","media","media_url","display_tweets","tweet_list","map","key","user","profile_image_url_https","name","screen_name","full_text","retweet_count","favorite_count","length","target","value"],"sources":["/Users/elijah/Desktop/SDMM/twitter-showcase-application/front-end/src/components/Showcase/Showcase.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./Showcase.css\";\nimport axios from \"axios\";\nimport likes from \"../Images/love.png\";\nimport retweets from \"../Images/repost.png\";\nimport search from \"../Images/search.jpg\";\nconst Showcase = () => {\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [userHasSearched, setUserHasSearched] = useState(false);\n    const [tweetData, setTweetData] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        getTweets();\n    };\n\n    const getTweets = async () => {\n        try {\n            const response = await axios\n                .get(\"/SearchTweets\", { params: { userInput: searchInput } })\n                .then((tweets) => {\n                    setTweetData(tweets.data.statuses);\n                    setUserHasSearched(true);\n                });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const renderExtendedEntities = (tweet) => {\n        if (tweet.hasOwnProperty(\"extended_entities\")) {\n            return (\n                <div className=\"extended-media-container\">\n                    <img\n                        src={tweet.extended_entities.media[0].media_url}\n                        alt=\"media\"\n                        className=\"tweet-extended-media\"\n                    />\n                </div>\n            );\n        }\n        return <></>;\n    };\n\n    const display_tweets = () => {\n        const tweet_list = tweetData.map((tweet, key) => {\n            return (\n                <div className=\"tweet\" key={key}>\n                    <span className=\"image-container\">\n                        <img\n                            src={tweet.user.profile_image_url_https}\n                            alt={tweet.profile_image_url_https}\n                            className=\"tweet-profile-pic\"\n                        />\n                    </span>\n                    <span>\n                        <span className=\"tweet-author\">\n                            <span className=\"tweet-username\">\n                                {tweet.user.name}\n                            </span>\n                            <span className=\"tweet-handle\">\n                                @{tweet.user.screen_name}\n                            </span>\n                        </span>\n                        <div className=\"tweet-body\">\n                            <div className=\"tweet-text\">{tweet.full_text}</div>\n                        </div>\n                        <div className=\"tweet-metrics\">\n                            <span className=\"tweet-retweet-count\">\n                                <img\n                                    src={retweets}\n                                    className=\"tweet-retweets\"\n                                    alt=\"retweets\"\n                                />\n                                {tweet.retweet_count}\n                            </span>\n                            <span className=\"tweet-favorite-count\">\n                                <img\n                                    src={likes}\n                                    className=\"tweet-likes\"\n                                    alt=\"likes\"\n                                />\n                                {tweet.favorite_count}\n                            </span>\n                        </div>\n                        {renderExtendedEntities(tweet)}\n                    </span>\n                </div>\n            );\n        });\n        if (tweet_list.length > 0 && userHasSearched) {\n            return tweet_list;\n        }\n        if (tweet_list.length === 0 && userHasSearched) {\n            return (\n                <h3>\n                    Error, there were no matches for your search. Please refine\n                    it and try again.\n                </h3>\n            );\n        } else {\n            return (\n                <>\n                    <h3>Search for a Twitter user or a text string</h3>\n                    <img\n                        src={search}\n                        alt=\"search\"\n                        className=\"search-image\"\n                    ></img>\n                </>\n            );\n        }\n    };\n\n    return (\n        <div className=\"showcase-container\">\n            <Form className=\"search-form\" onSubmit={handleSubmit}>\n                <input\n                    className=\"search-input\"\n                    type=\"text\"\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    value={searchInput}\n                    placeholder=\"Ex: @nasa for NASA's tweets, or NASA to match tweets containing the string 'NASA' \"\n                    required\n                />\n                <Button className=\"search-button\" type=\"submit\">\n                    Search User\n                </Button>\n            </Form>\n            <div>{display_tweets()}</div>\n        </div>\n    );\n};\n\nexport default Showcase;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}