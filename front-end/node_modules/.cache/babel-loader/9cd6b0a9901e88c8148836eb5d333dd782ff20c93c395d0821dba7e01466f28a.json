{"ast":null,"code":"var _jsxFileName = \"/Users/elijah/Desktop/SDMM/twitter-showcase-application/front-end/src/components/Random/Random.js\",\n  _s = $RefreshSig$();\nimport \"./Random.css\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Random = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [randomData, setRandomData] = useState([]);\n  useEffect(() => {\n    axios.get(\"/SearchTweets\").then(res => res.json()).then(data => {\n      setRandomData(data);\n      console.log(data);\n    });\n  }, []);\n  const testArray = [\"kurzegast\", \"Jordan Peterson\", \"Tim Kennedy\", \"Mikael Akerfeldt\", \"Ben Eller\"]; //This will be replaced with user ID's to send GET requests to pull one of their tweets\n\n  const handleClick = e => {\n    e.preventDefault();\n    const randomUser = Math.floor(Math.random() * testArray.length);\n    const result = testArray[randomUser];\n    setText(result);\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"random-header\",\n      children: \"Random Tweet Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Get A Random Tweet!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Random, \"2juM++cvWCCdsCKI+Vh3GwIrqds=\");\n_c = Random;\nexport default Random;\nvar _c;\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"names":["useEffect","useState","Button","axios","Random","text","setText","randomData","setRandomData","get","then","res","json","data","console","log","testArray","handleClick","e","preventDefault","randomUser","Math","floor","random","length","result"],"sources":["/Users/elijah/Desktop/SDMM/twitter-showcase-application/front-end/src/components/Random/Random.js"],"sourcesContent":["import \"./Random.css\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Random = () => {\n    const [text, setText] = useState(\"\");\n    const [randomData, setRandomData] = useState([]);\n    useEffect(() => {\n        axios.get(\"/SearchTweets\")\n            .then((res) => res.json())\n            .then((data) => {\n                setRandomData(data);\n                console.log(data);\n            });\n    }, []);\n\n    const testArray = [\n        \"kurzegast\",\n        \"Jordan Peterson\",\n        \"Tim Kennedy\",\n        \"Mikael Akerfeldt\",\n        \"Ben Eller\",\n    ]; //This will be replaced with user ID's to send GET requests to pull one of their tweets\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        const randomUser = Math.floor(Math.random() * testArray.length);\n        const result = testArray[randomUser];\n        setText(result);\n        console.log(result);\n    };\n\n    return (\n        <div className=\"random-container\">\n            <h1 className=\"random-header\">Random Tweet Page</h1>\n            <p>{text}</p>\n            {/* {randomData.map((tweet) => {\n                return <p>{tweet.text}</p>;\n            })} */}\n\n            <Button onClick={handleClick}>Get A Random Tweet!!!</Button>\n        </div>\n    );\n};\n\nexport default Random;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZG,KAAK,CAACM,GAAG,CAAC,eAAe,CAAC,CACrBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZL,aAAa,CAACK,IAAI,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAG,CACd,WAAW,EACX,iBAAiB,EACjB,aAAa,EACb,kBAAkB,EAClB,WAAW,CACd,CAAC,CAAC;;EAEH,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,SAAS,CAACQ,MAAM,CAAC;IAC/D,MAAMC,MAAM,GAAGT,SAAS,CAACI,UAAU,CAAC;IACpCd,OAAO,CAACmB,MAAM,CAAC;IACfX,OAAO,CAACC,GAAG,CAACU,MAAM,CAAC;EACvB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC7B;MAAI,SAAS,EAAC,eAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACpD;MAAA,UAAIpB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eAKb,QAAC,MAAM;MAAC,OAAO,EAAEY,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEd,CAAC;AAAC,GAvCIb,MAAM;AAAA,KAANA,MAAM;AAyCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}